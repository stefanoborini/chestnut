#!/usr/bin/env python
# @description Runs chestnut packages from the command line
# @author Stefano Borini 

import sys
import os

script_path=os.path.abspath(sys.path[0]); sys.path.append(os.path.abspath(os.path.join(script_path, "../lib/python")));

from Chestnut import PackageResolver
from Chestnut import PackageRunner

def usage():
    print "Chestnut Package Manager"
    print "By Stefano Borini"
    print ""
    print "Usage: "+os.path.basename(sys.argv[0])+" PackageName[-version][/entryPoint]"
    print ""
    print "Run the package default entry point, or a specific entry point as specified."
    print "Examples:"
    print os.path.basename(sys.argv[0])+" PackageName"
    print os.path.basename(sys.argv[0])+" PackageName/entryPoint"
    print os.path.basename(sys.argv[0])+" PackageName-1.0.0"
    print os.path.basename(sys.argv[0])+" PackageName-1.0.0/entryPoint"


class Runner:
    def __init__(self):
        pass
    def run(self, name, arguments):
        if "/" in name:
            # this is an attempt. It could just be a relative or absolute path
            package_versioned_name, entry_point = name.split("/", 1)
        else:
            package_versioned_name = name
            entry_point = None

        parts = package_versioned_name.split("-",1)
        if len(parts) == 2:
            package_name, version_string = parts
        else:
            package_name = parts[0]
            version_string = None
        
        if version_string is not None:
            version = version_string.split(".")
        else:
            version = ()

        resolver = PackageResolver.PackageResolver()
        package = resolver.find(package_name, version)

        if package is not None:
            if entry_point is None or len(entry_point.strip()) == 0:
                PackageRunner.run(package,arguments, os.environ)
            else:
                PackageRunner.runEntryPoint(package,entry_point, arguments, os.environ)
        else :
            # run it as an ordinary program
            os.execvpe(name,[name, ]+arguments, os.environ)


if len(sys.argv) < 2:
    usage()
    sys.exit(0)

if __name__ == "__main__":
    runner=Runner()
    runner.run(sys.argv[1], sys.argv[2:])
